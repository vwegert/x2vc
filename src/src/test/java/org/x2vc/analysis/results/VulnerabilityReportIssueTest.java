package org.x2vc.analysis.results;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

@ExtendWith(MockitoExtension.class)
class VulnerabilityReportIssueTest {

	/**
	 * Test method for
	 * {@link org.x2vc.analysis.results.VulnerabilityReportIssue#builder()} and the
	 * associated builder class.
	 */
	@Test
	void testBuilder() {
		final IVulnerabilityReportIssue issue = VulnerabilityReportIssue.builder()
			.withAffectedOutputElement("output")
			.addAffectingInputElement("input1")
			.addAffectingInputElement("input2")
			.addExample(new VulnerabilityReportExample("is1", "os1"))
			.addExample("is2", "os2")
			.build();
		assertEquals("output", issue.getAffectedOutputElement());
		assertEquals(2, issue.getAffectingInputElements().size());
		assertTrue(issue.getAffectingInputElements().contains("input1"));
		assertTrue(issue.getAffectingInputElements().contains("input2"));
		assertEquals(2, issue.getExamples().size());
		assertEquals("is1", issue.getExamples().get(0).getInputSample());
		assertEquals("os1", issue.getExamples().get(0).getOutputSample());
		assertEquals("is2", issue.getExamples().get(1).getInputSample());
		assertEquals("os2", issue.getExamples().get(1).getOutputSample());
	}

}
