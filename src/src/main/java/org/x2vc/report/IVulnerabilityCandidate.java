package org.x2vc.report;

import java.io.Serializable;
import java.util.UUID;
import java.util.function.Consumer;

import org.x2vc.utilities.IDebugObjectWriter;

/**
 * A vulnerability candidate identified by the document analyzer.
 */
public interface IVulnerabilityCandidate extends Serializable {

	/**
	 * @return the ID of the analyzer rule that produced the candidate
	 */
	String getAnalyzerRuleID();

	/**
	 * @return the ID of the schema object that was used to introduce the value
	 */
	UUID getAffectingSchemaObject();

	/**
	 * @return an XPath expression pointing to the element in the HTML document
	 *         affected by an input value
	 */
	String getAffectedOutputElement();

	/**
	 * @return an excerpt of the XML data that shows the schema object with the
	 *         value introduced
	 */
	String getInputSample();

	/**
	 * @return an excerpt of the HTML document that shows the affected output
	 *         element
	 */
	String getOutputSample();

	/**
	 * @return the ID of the task that can be used to locate the files written using
	 *         {@link IDebugObjectWriter}
	 */
	UUID getTaskID();

	/**
	 * Sends the candidate to the consumer provided.
	 *
	 * @param consumer
	 */
	void sendTo(Consumer<IVulnerabilityCandidate> consumer);

}
